name: deploy-vps
on:
  workflow_dispatch:
  push:
    branches:
      - duclnh
    
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup code
        uses: actions/checkout@v4
    
      - name: Build and push image 
        uses: elgohr/Publish-Docker-Github-Action@v4
        with:
          name: ${{ vars.IMAGE_NAME }}
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          tags: ${{ vars.VERSION_DEV }}
          dockerfile: Dockerfile

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Deploy package to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            if [[ "$(sudo docker ps -aq -f name=${{ env.CONTAINER_NAME }})" ]]; then
              docker stop ${{ env.CONTAINER_NAME }}
              docker rm ${{ env.CONTAINER_NAME }}
            
            fi

            if [[ "$(sudo docker images -q ${{ env.DOCKER_IMAGE }})" ]]; then
              docker rmi ${{ env.DOCKER_IMAGE }}
            fi

            docker pull ${{ env.DOCKER_IMAGE }}
            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --network ${{ env.NETWORK }} \
              --restart unless-stopped \
              -v ${{ env.VOLUME }}:${{ vars.UPLOAD_FOLDER }} \
              -p ${{ env.CONTAINER_PORT }}:${{ vars.PORT }} \
              ${{ env.DOCKER_IMAGE }}
